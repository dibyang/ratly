#!/usr/bin/env bash

function printUsage {
  echo "Usage: ratly COMMAND [GENERIC_COMMAND_OPTIONS] [COMMAND_ARGS]"
  echo
  echo "COMMAND is one of:"
  echo -e "  sh    \t Command line tool for ratly"
  echo
  echo "GENERIC_COMMAND_OPTIONS supports:"
  echo -e "  -D<property=value>\t Use a value for a given ratly-shell property"
  echo
  echo "Commands print help when invoked without parameters."
}

function runJavaClass {
  CLASS_ARGS=()
  for arg in "$@"; do
      case "${arg}" in
          -D* | -X* | -agentlib* | -javaagent*)
              RATLY_SHELL_JAVA_OPTS+=" ${arg}" ;;
          *)
              CLASS_ARGS+=("${arg}")
      esac
  done
  "${JAVA}" -cp "${CLASSPATH}" ${RATLY_SHELL_JAVA_OPTS} "${CLASS}" ${PARAMETER} "${CLASS_ARGS[@]}"
}

function main {
  BIN=$(cd "$( dirname "$( readlink "$0" || echo "$0" )" )" || exit; pwd)

  if [[ $# == 0 ]]; then
    printUsage
    exit 1
  fi

  COMMAND=$1
  shift

  DEFAULT_LIBEXEC_DIR="${BIN}"/../libexec
  RATLY_SHELL_LIBEXEC_DIR=${RATLY_SHELL_LIBEXEC_DIR:-$DEFAULT_LIBEXEC_DIR}
  . "${RATLY_SHELL_LIBEXEC_DIR}"/ratly-shell-config.sh

  PARAMETER=""

  case ${COMMAND} in
  "sh")
    CLASS="net.xdob.ratly.shell.cli.sh.RatlyShell"
    CLASSPATH=${RATLY_SHELL_CLIENT_CLASSPATH}
    runJavaClass "$@"
  ;;
  *)
    echo "Unsupported command ${COMMAND}" >&2
    printUsage
    exit 1
  ;;
  esac
}

main "$@"
